/**
 * Part of the AddressDiscoverer project, licensed under the GPL v.3 license.
 * This project provides intelligence for discovering email addresses in
 * specified web pages, associating them with a given institution and department
 * and address type.
 *
 * This project is licensed under the GPL v.3. Your rights to copy and modify
 * are regulated by the conditions specified in that license, available at
 * http://www.gnu.org/licenses/gpl-3.0.html
 */
package org.norvelle.addressdiscoverer.gui;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.norvelle.addressdiscoverer.AddressDiscoverer;
import org.norvelle.addressdiscoverer.exceptions.CannotLoadJDBCDriverException;
import org.norvelle.addressdiscoverer.gui.action.DatabasePruner;
import org.norvelle.addressdiscoverer.gui.action.ResetExportFlagsAction;
import org.norvelle.addressdiscoverer.gui.threading.DetermineGenderWorker;
import org.norvelle.utils.Utils;

/**
 *
 * @author Erik Norvelle <erik.norvelle@cyberlogos.co>
 */
public class DatabaseToolsForm extends javax.swing.JDialog {

    // A logger instance
    private static final Logger logger = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME); 

    private boolean genderWorkerWorking = false;
    private DetermineGenderWorker worker;
    private DatabasePruner pruner;
    private MainWindow parent;
    
    /**
     * Creates new form DatabaseToolsForm
     * @param parent
     */
    public DatabaseToolsForm(MainWindow parent) {
        super(parent, true);
        initComponents();
        this.parent = parent;
        
        this.jRegexForPruningField.getDocument().addDocumentListener(
                new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent de) {
                notifyPruneLikeClauseChanged();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                notifyPruneLikeClauseChanged();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                notifyPruneLikeClauseChanged();
            }
        });
        try {
            this.pruner = new DatabasePruner();
        } catch (SQLException | CannotLoadJDBCDriverException ex) {
            AddressDiscoverer.reportException(ex);
        }
    }
    
    private void notifyPruneLikeClauseChanged() {
        this.jUpdateAffectedButton.setEnabled(true);
        this.jRunPruneButton.setEnabled(false);
    }
    
    public void setMaxProgress(int max) {
        this.jSetGenderProgressBar.setMaximum(max);
    }
    
    public void setCurrProgress(int progress) {
        this.jSetGenderProgressBar.setValue(progress);
    }
    
    public void setProgressDone() {
        this.jSetGenderProgressBar.setValue(0);
        this.jDetermineGenderButton.setText("Set Gender");
        this.genderWorkerWorking = false;
        this.worker = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jFieldListCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRegexForPruningField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jRecordsAffectedLabel = new javax.swing.JLabel();
        jUpdateAffectedButton = new javax.swing.JButton();
        jRunPruneButton = new javax.swing.JButton();
        jCloseButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jResetExportFlagsButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jSetGenderProgressBar = new javax.swing.JProgressBar();
        jDetermineGenderButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jOnlyUpdateNonExportedCheckbox = new javax.swing.JCheckBox();
        jLimitToUnassignedGenderCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Database Tools");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Prune Records");

        jFieldListCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "firstName", "lastName", "email", "title", "affiliation", "unprocessed", "role", "gender" }));

        jLabel2.setText("For field:");

        jLabel3.setText("delete records matching:");

        jLabel4.setText("Records affected:");

        jRecordsAffectedLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jRecordsAffectedLabel.setText("00");

        jUpdateAffectedButton.setText("Update");
        jUpdateAffectedButton.setEnabled(false);
        jUpdateAffectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateAffectedButtonActionPerformed(evt);
            }
        });

        jRunPruneButton.setText("Prune Now");
        jRunPruneButton.setEnabled(false);
        jRunPruneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRunPruneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRegexForPruningField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFieldListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRecordsAffectedLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jUpdateAffectedButton))
                            .addComponent(jRunPruneButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFieldListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jRegexForPruningField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jRecordsAffectedLabel)
                    .addComponent(jUpdateAffectedButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRunPruneButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jCloseButton.setText("Close");
        jCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseButtonActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Reset export flag:");

        jResetExportFlagsButton.setText("Execute");
        jResetExportFlagsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jResetExportFlagsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jResetExportFlagsButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jResetExportFlagsButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jDetermineGenderButton.setText("Execute");
        jDetermineGenderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDetermineGenderButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Update genders according to first names");

        jOnlyUpdateNonExportedCheckbox.setText("Limit to unexported individuals:");
        jOnlyUpdateNonExportedCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jLimitToUnassignedGenderCheckbox.setText("Limit to unassigned gender:");
        jLimitToUnassignedGenderCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jDetermineGenderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jSetGenderProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jOnlyUpdateNonExportedCheckbox)
                                .addGap(18, 18, 18)
                                .addComponent(jLimitToUnassignedGenderCheckbox)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOnlyUpdateNonExportedCheckbox)
                    .addComponent(jLimitToUnassignedGenderCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSetGenderProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDetermineGenderButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCloseButton))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCloseButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDetermineGenderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDetermineGenderButtonActionPerformed
        if (this.genderWorkerWorking) {
            this.worker.cancel(true);
            this.worker = null;
            this.genderWorkerWorking = false;
            this.jDetermineGenderButton.setText("Set Gender");
        }
        else {
            boolean limitToNonExported = this.jOnlyUpdateNonExportedCheckbox.isSelected();
            boolean limitToUndeterminedGender = 
                    this.jLimitToUnassignedGenderCheckbox.isSelected();
            this.worker = new DetermineGenderWorker(this, limitToNonExported, limitToUndeterminedGender);
            this.jDetermineGenderButton.setText("Cancel");
            try {
                this.genderWorkerWorking = true;
                worker.execute();
            } catch (Exception ex) {
                this.jDetermineGenderButton.setEnabled(true);
                AddressDiscoverer.reportException(ex);
            }
        }
    }//GEN-LAST:event_jDetermineGenderButtonActionPerformed

    private void jCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseButtonActionPerformed
        if (this.genderWorkerWorking) {
            int reply = JOptionPane.showConfirmDialog(null, 
                    Utils.wordWrapString("The Gender Determiner is running. Do you want to cancel?", 50), 
                    "Confirm delete", 
                    JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.NO_OPTION) 
                return;
            this.worker.cancel(true);
        }
        this.setVisible(false);
    }//GEN-LAST:event_jCloseButtonActionPerformed

    private void jResetExportFlagsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jResetExportFlagsButtonActionPerformed
        ResetExportFlagsAction action = new ResetExportFlagsAction();
        try {
            this.jResetExportFlagsButton.setEnabled(false);
            action.execute();
        } catch (CannotLoadJDBCDriverException | SQLException ex) {
            AddressDiscoverer.reportException(ex);
        }
        this.jResetExportFlagsButton.setEnabled(true);
    }//GEN-LAST:event_jResetExportFlagsButtonActionPerformed

    private void jUpdateAffectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateAffectedButtonActionPerformed
        try {
            int rowsAffected = this.pruner.setLikeClauseAndField(this.jRegexForPruningField.getText(),
                    (String) this.jFieldListCombo.getSelectedItem());
            this.jRecordsAffectedLabel.setText(Integer.toString(rowsAffected));
            this.jRunPruneButton.setEnabled(true);
        } catch (SQLException ex) {
            logger.log(Level.SEVERE, ex.getMessage());
            JOptionPane.showMessageDialog(null,
                Utils.wordWrapString("SQLite error: " + ex.getMessage(), 60), 
                "SQLite error", JOptionPane.ERROR_MESSAGE);            
            this.jRecordsAffectedLabel.setText("Error");
            this.jRunPruneButton.setEnabled(false);
        }
    }//GEN-LAST:event_jUpdateAffectedButtonActionPerformed

    private void jRunPruneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRunPruneButtonActionPerformed
        try {
            this.pruner.runPrune();
            this.jRunPruneButton.setEnabled(false);
            this.parent.refreshIndividualList();
        } catch (SQLException ex) {
            logger.log(Level.SEVERE, ex.getMessage());
            JOptionPane.showMessageDialog(null,
                Utils.wordWrapString("SQLite error: " + ex.getMessage(), 60), 
                "SQLite error", JOptionPane.ERROR_MESSAGE);            
            this.jRecordsAffectedLabel.setText("Error");
        }

    }//GEN-LAST:event_jRunPruneButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCloseButton;
    private javax.swing.JButton jDetermineGenderButton;
    private javax.swing.JComboBox jFieldListCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JCheckBox jLimitToUnassignedGenderCheckbox;
    private javax.swing.JCheckBox jOnlyUpdateNonExportedCheckbox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jRecordsAffectedLabel;
    private javax.swing.JTextField jRegexForPruningField;
    private javax.swing.JButton jResetExportFlagsButton;
    private javax.swing.JButton jRunPruneButton;
    private javax.swing.JProgressBar jSetGenderProgressBar;
    private javax.swing.JButton jUpdateAffectedButton;
    // End of variables declaration//GEN-END:variables
}
