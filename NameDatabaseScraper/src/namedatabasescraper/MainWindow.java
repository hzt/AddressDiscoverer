/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package namedatabasescraper;

import java.io.File;
import java.util.Collection;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Erik Norvelle <erik.norvelle@cyberlogos.co>
 */
public class MainWindow extends javax.swing.JFrame {

    NameDatabaseScraper parent;
    DefaultTableModel model;
    
    /**
     * Creates new form MainWindow
     * @param parent
     */
    public MainWindow(NameDatabaseScraper parent) {
        this.parent = parent;
        initComponents();
        String oldDir = this.parent.getProps().getProperty("last_directory");
        if (oldDir != null) {
            this.jDirectoryNameTextField.setText(oldDir);
            this.populateNamesColumn();
        }
    }

    /**
     * A single-access point for reporting exceptions to the user.
     * 
     * @param message
     */
    public void reportException(String message) {
        JOptionPane.showMessageDialog(this,
            Utils.wordWrapString(message, 50),
            "Program error", JOptionPane.ERROR_MESSAGE);
    }

    private void populateNamesColumn() {
        String[] extensions = {"html"};
        File dir = new File(this.jDirectoryNameTextField.getText());
        Collection<File> htmlFiles = FileUtils.listFiles(dir, extensions, false);
        this.model = new DefaultTableModel();
        model.setNumRows(htmlFiles.size());
        model.setColumnCount(2);
        String[] columnNames = {"File Names", "Number of Words Extracted"};
        model.setColumnIdentifiers(columnNames);
        int rowCount = 0;
        for (File htmlFile : htmlFiles) {
            model.setValueAt(htmlFile.getName(), rowCount, 0);
            model.setValueAt("0", rowCount, 1);
            rowCount ++;
        }
        this.jResultsTable.setModel(model);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jDirectoryNameTextField = new javax.swing.JTextField();
        jSelectDirectoryButton = new javax.swing.JButton();
        jRunScraperButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jResultsTable = new javax.swing.JTable();

        jFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Directory:");

        jSelectDirectoryButton.setText("Select Directory");
        jSelectDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectDirectoryButtonActionPerformed(evt);
            }
        });

        jRunScraperButton.setText("Run Scraper");

        jResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "File Name", "Names Extracted"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jResultsTable);
        if (jResultsTable.getColumnModel().getColumnCount() > 0) {
            jResultsTable.getColumnModel().getColumn(0).setResizable(false);
            jResultsTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDirectoryNameTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSelectDirectoryButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRunScraperButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jDirectoryNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSelectDirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRunScraperButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSelectDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectDirectoryButtonActionPerformed
        File file;
        int returnVal = this.jFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = this.jFileChooser.getSelectedFile();
        } 
        else {
            return;
        }
        this.jDirectoryNameTextField.setText(file.getAbsolutePath());
        this.populateNamesColumn();
    }//GEN-LAST:event_jSelectDirectoryButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.parent.getProps().setProperty("last_directory", this.jDirectoryNameTextField.getText());
        this.parent.shutdown();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jDirectoryNameTextField;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jResultsTable;
    private javax.swing.JButton jRunScraperButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSelectDirectoryButton;
    // End of variables declaration//GEN-END:variables


}
